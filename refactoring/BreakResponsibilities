							Break Responsibilities
							
							
1.Break Responsibilities【分离职责】

		其实一直提到设计原则，自然也提到了单一责任原则SRP，要学重构，SRP是必然要知道，
		
且学会的思想，并且灵活应用到重构代码中。


====================================================================================

	实例：
	
		  public class Video{
        
			public void PayFee(int fee){
			}

			public void RentVideo(Video video, Customer customer){
            customer.Videos.add(video);
			}

			public int CalculateBalance(Customer customer){
				return customer.LateFees.size();
			}
		}

		public class Customer{
			public List<Integer> LateFees;
			public List<Video> Videos ;
		}
		
		
==========================================================================

	分析：
	
		很明显，顾客购买Video的金额，并不是Video本身应该关系的，而是每个Customer应该关系的，
	
因此，需要将计算购买金额的方法下移到Customer类中来完成

-----------------------------解决方案----------------------------------------

	
	public class Videos{
        
		public void RentVideo(Video1 video, Customer1 customer){
            customer.Videos.add(video);
        }
    }

    public class Customer1{
        
		public List<Integer> LateFees;
        public List<Video1> Videos ;

        public void PayFee(int fee){
        }

        public int CalculateBalance(Customer1 customer){
            return customer.LateFees.size();
        }
    }
	
